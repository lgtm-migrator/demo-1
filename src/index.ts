import * as express from 'express';
import fetch from 'node-fetch';
import * as redis from 'redis';

const port = process.env.PORT || 5000;
const redisPort = Number(process.env.REDIS_PORT) || 6379;

const client = redis.createClient({
  port: redisPort,
});

const app = express();

// Generated by https://quicktype.io

interface User {
  login: string;
  id: number;
  node_id: string;
  avatar_url: string;
  gravatar_id: string;
  url: string;
  html_url: string;
  followers_url: string;
  following_url: string;
  gists_url: string;
  starred_url: string;
  subscriptions_url: string;
  organizations_url: string;
  repos_url: string;
  events_url: string;
  received_events_url: string;
  type: string;
  site_admin: boolean;
  name: string;
  company: null;
  blog: string;
  location: null;
  email: null;
  hireable: null;
  bio: null;
  public_repos: number;
  public_gists: number;
  followers: number;
  following: number;
  created_at: string;
  updated_at: string;
}

interface Params {
  username: string;
}

const formatCount = ({
  username,
  publicRepos,
}: {
  publicRepos: User['public_repos'];
} & Params) =>
  `<div>Public repos for <i>${username}</i>: <strong>${publicRepos}</strong></div>`;

let cacheMiddleware: express.Handler = function(
  { params: { username } },
  res,
  next,
) {
  client.get(username, (err, data) => {
    if (err) {
      throw err;
    } else {
      if (data) {
        res.send(formatCount({ username, publicRepos: Number(data) }));
      } else {
        next();
      }
    }
  });
};

const fetchReposCount: express.Handler = function(req, res, next) {
  const {
    params: { username },
  } = req;

  console.log('fetching repos count for', '"', username, '"');
  fetch(`https://api.github.com/users/${username}`)
    .then(res => res.json())
    .then(({ public_repos }: User) => public_repos || -1)
    .then(publicRepos => {
      client.setex(username, 3600, publicRepos.toString());

      return publicRepos;
    })
    .then(publicRepos => formatCount({ username, publicRepos }))
    .then(repos => res.send(repos))
    .catch(console.error);
};

app.get('/repos/:username', cacheMiddleware, fetchReposCount);

app.listen(port, () => {
  console.log(`http://localhost:${port}`);
});
